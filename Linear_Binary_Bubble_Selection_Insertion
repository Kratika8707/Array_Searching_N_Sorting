/******************************************************************************

                                 Linear Search O(N)
           
*******************************************************************************/
/*
public class Main
{
	public static void main(String[] args) 
	{
	    int arr[] = {12,123,43,22,54,673,435,65,67,4};
	    int n  = arr.length;
	    int ele = 6732;
	    boolean found = false;
	    int pos = 0;
	    for(int i=0;i<n;i++)
	    {
	        if(arr[i]==ele)
	         {
	             found = true;
	             pos = i+1;
	             break;
	         }
	      
	    }
	    if(found==true)
		System.out.println(ele + " Found at Position : " + pos);
		else
		System.out.println("Not Found");
	}
}

*/

/******************************************************************************

                                 Binary Search O(NLOGN)
           
*******************************************************************************/
/*
public class Main
{
	public static void main(String[] args) 
	{
	    int arr[] = {12,23,34,54,56,778,856,878,976};
	    int n  = arr.length;
	    int ele = 976;
	    int low = 0;
	    int high = arr.length-1;
	    int mid = (high+low)/2;
	    while(low<=high)
	    {
	        if(arr[mid]<ele)
	          low = mid+1;
	        else if(arr[mid]==ele)
	        {
	         System.out.println(ele + " Elements Found " + mid );
	         break;
	        }
	        else
	         high = mid-1;
	      
	        mid = (high+low)/2;
	    }
	    if(low>high)
	     System.out.println("NOT FOUND");
	     
	}
}
*/

/******************************************************************************

                                 SELECTION SORT O(N^2)
           
*******************************************************************************/
/*
public class Main
{
	public static void main(String[] args) 
	{
	    int arr[] = {12,78,97, 32,54,23,6};
	    int n  = arr.length;
	    int temp;
	    for(int i=0;i<n;i++)
	    {
	        for(int j=i+1;j<n;j++)
	        {
	            if(arr[i]>arr[j])
	            {
	                temp = arr[i];
	                arr[i] = arr[j];
	                arr[j] = temp;
	            }
	        }
	    }
	        
	     for(int i=0;i<n;i++)
	     System.out.print(arr[i] + " ");
	}
}
*/

/******************************************************************************

                                 INSERTION SORT O(N^2)
           
*******************************************************************************/

public class Main
{
	public static void main(String[] args) 
	{
	    int arr[] = {12,78,97, 32,54,23,6};
	    int n  = arr.length;
	    int temp;
	    for(int j=1;j<n;j++) //from 1 to n;
	    {
	        int key = arr[j];
	        int i =j-1;
	        while((i>-1)&&(arr[i]>key))
	        {
	            arr[i+1] = arr[i];
	            i--;
	        }
	        arr[i+1]=key;
	    }
	    for(int i=0;i<n;i++)
	    System.out.print(arr[i]+" ");
	}
}
